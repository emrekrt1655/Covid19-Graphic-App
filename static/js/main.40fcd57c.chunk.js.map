{"version":3,"sources":["virus.svg","api.js","components/AreaChart.jsx","App.js","index.js"],"names":["baseEndpoint","fetchCountry","a","axios","get","data","fetchDailyData","country","AreaChart","useState","dailyData","setDailyData","lastData","setLastData","useEffect","length","fetchCountryDailyData","style","textAlign","color","Country","Active","Confirmed","Recovered","Deaths","id","options","chart","height","type","dataLabels","enabled","stroke","curve","xaxis","categories","map","item","Date","tooltip","x","format","series","name","marginTop","useStyles","makeStyles","option","fontSize","marginRight","App","countries","setCountries","setCountry","classes","fetchCountriesData","countryNames","label","slug","Slug","Fragment","CssBaseline","Container","maxWidth","Grid","container","src","logo","alt","width","Autocomplete","margin","value","onChange","event","autoHighlight","getOptionLabel","renderOption","renderInput","params","TextField","variant","inputProps","xs","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40fcd57c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/virus.b7d2e085.svg\";","import axios from 'axios';\r\n\r\nconst baseEndpoint = 'http://api.covid19api.com';\r\n\r\nexport const fetchCountry = async () => {\r\n    const {data} = await axios.get(`${baseEndpoint}/countries`)\r\n    return data;\r\n}\r\n\r\nexport const fetchDailyData = async (country) => {\r\n    const {data} =  await axios.get(`${baseEndpoint}/dayone/country/${country}`)\r\n    return data;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { fetchDailyData } from \"../api\";\r\n\r\nexport default function AreaChart({ country }) {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  const [lastData, setLastData] = useState();\r\n  useEffect(() => {\r\n    const fetchCountryDailyData = async () => {\r\n      const data = await fetchDailyData(country);\r\n      setDailyData(data);\r\n      setLastData(data[data.length - 1]);\r\n    };\r\n    fetchCountryDailyData();\r\n  }, [country]);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <h1 style={{ color: \"blue\" }}> {lastData?.Country} </h1>\r\n        <p>\r\n          <span style={{ color: \"blue\" }}>Active:</span> {lastData?.Active}\r\n        </p>\r\n        <p>\r\n          <span style={{ color: \"blue\" }}>Total:</span> {lastData?.Confirmed}\r\n        </p>\r\n        <p>\r\n          <span style={{ color: \"blue\" }}>Recoverd:</span> {lastData?.Recovered}\r\n        </p>\r\n        <p>\r\n          <span style={{ color: \"blue\" }}>Deaths</span> {lastData?.Deaths}\r\n        </p>\r\n      </div>\r\n\r\n      <div id=\"chart\">\r\n        <Chart\r\n          options={{\r\n            chart: {\r\n              height: 350,\r\n              type: \"area\",\r\n            },\r\n            dataLabels: {\r\n              enabled: false,\r\n            },\r\n            stroke: {\r\n              curve: \"smooth\",\r\n            },\r\n            xaxis: {\r\n              type: \"datetime\",\r\n              categories: dailyData?.map((item) => item?.Date),\r\n            },\r\n            tooltip: {\r\n              x: {\r\n                format: \"dd/MM/yy\",\r\n              },\r\n            },\r\n          }}\r\n          series={[\r\n            {\r\n              name: \"Cases\",\r\n              data: dailyData?.map((item) => item?.Confirmed),\r\n            },\r\n            {\r\n              name: \"Recovered\",\r\n              data: dailyData?.map((item) => item?.Recovered),\r\n            },\r\n            {\r\n              name: \"Deaths\",\r\n              data: dailyData?.map((item) => item?.Deaths),\r\n            },\r\n          ]}\r\n          style={{\r\n            marginTop: 100,\r\n          }}\r\n          height={400}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport logo from \"./virus.svg\";\nimport { fetchCountry } from \"./api\";\nimport AreaChart from \"./components/AreaChart\";\n\nconst useStyles = makeStyles({\n  option: {\n    fontSize: 15,\n    \"& > span\": {\n      marginRight: 10,\n      fontSize: 18,\n    },\n  },\n});\n\nconst App = () => {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"turkey\");\n  const classes = useStyles();\n\n  useEffect(() => {\n    const fetchCountriesData = async () => {\n      const countries = await fetchCountry();\n      setCountries(countries);\n    };\n    fetchCountriesData();\n  }, []);\n\n  const countryNames = countries?.map((item) => {\n    return { label: item.Country, slug: item.Slug };\n  });\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <Grid container>\n          <img\n            src={logo}\n            alt=\"Covid19\"\n            style={{\n              width: 100,\n              height: 100,\n              marginTop: 20,\n            }}\n          />\n\n          <Autocomplete\n            id=\"country-select-demo\"\n            style={{ width: \"50%\", margin: \"50px auto\" }}\n            value={null}\n            onChange={(event, value) => {\n              setCountry(value.slug);\n            }}\n            options={countryNames}\n            classes={{\n              option: classes.option,\n            }}\n            autoHighlight\n            getOptionLabel={(option) => option.label}\n            renderOption={(option) => (\n              <React.Fragment>{option.label}</React.Fragment>\n            )}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Choose a country\"\n                variant=\"outlined\"\n                inputProps={{\n                  ...params.inputProps,\n                }}\n              />\n            )}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <h4> </h4>\n        </Grid>\n\n        <Grid item xs={12}>\n          <AreaChart country={country} />\n        </Grid>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}